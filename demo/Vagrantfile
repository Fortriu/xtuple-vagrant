# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<SCRIPT
echo Welcome to xTuple
> /etc/motd
SCRIPT

Vagrant.require_version ">= 1.5.0"

Vagrant.configure("2") do |config|

  config.vm.hostname = "xtuple-server"

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "lynnaloo/xtuple-mobile-demo"

  # Sets the Unix Message of the Day
  config.vm.provision "shell", inline: $script

  # Update xtuple code and dependencies
  # This forces the script to *not* be run as sudo
  #config.vm.provision "shell", path: "xtuple_update.sh", privileged: "false", binary: "false"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # Control the permissions of this file by setting owner: "root",
  # group: "root"
  #config.vm.synced_folder "dev", "/home/vagrant/dev", create: true

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://vagrantcloud.com/lynnaloo/xtuple-mobile-demo/version/1/provider/virtualbox.box"

  # Vbguest Plugin
  # We will try to autodetect this path.
  # However, if we cannot or you have a special one you may pass it like:
  # config.vbguest.iso_path = "#{ENV['HOME']}/Downloads/VBoxGuestAdditions.iso"
  # or
  # config.vbguest.iso_path = "http://company.server/VirtualBox/%{version}/VBoxGuestAdditions.iso"

  # set auto_update to false, if you do NOT want to check the correct
  # additions version when booting this machine
  config.vbguest.auto_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 8888, host: 8888
  config.vm.network :forwarded_port, guest: 8443, host: 8443

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

    # Use VBoxManage to customize the VM
    # This line disable hw virtualization and increases memory
    v.customize ["modifyvm", :id, "--memory", "2048"]

    # Boot the VM in Gui mode
    #v.gui = true
  end
end
